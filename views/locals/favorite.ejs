<div class="my-5">
    <h1 class="text-center mb-5">즐겨찾기</h1>  
    <div id="div_favorite"></div>
</div>
<!-- each .즐겨찾기 배열을 모두 다 나타내줌 -->
<!-- {{isbn}} 중요 -->
<script id="temp_favorite" type="x-handlebars-template">
    <table class="table table-hover">
        {{#each .}}
            <tr>
                <td>{{id}}</td>
                <td>{{place_name}}</td>
                <td>{{address_name}}</td>
                <td>{{phone}}</td>
                <td><button class="btn btn-danger btn-sm" id="{{id}}">삭제</button></td>
            </tr>
        {{/each}}
    </table>
</script>
<script type="module">
    import { app } from "/javascripts/firebaseInit.js";
    import { getDatabase, ref, onValue, remove} from "https://www.gstatic.com/firebasejs/10.4.0/firebase-database.js"; //ref는 어디에다 쓸것인지 set, get으로 지정
    const db = getDatabase(app);    //설정파일 app 지정

    //레퍼런스 지정 (장바구니 목록가져오기)
    const ref_local=ref(db, `favorite/${sessionStorage.getItem("uid")}`); 


    onValue(ref_local, snapshot=>{
        //목록이 여러개여서 forEach문으로 반복
        let rows=[];   // 배열 순서 지정 중요!
        snapshot.forEach(row => {
            // console.log(row.key, row.val());  키 = favorite 
            rows.push(row.val()); 
        });
        console.log(rows);
        const temp=Handlebars.compile($("#temp_favorite").html());
        $("#div_favorite").html(temp(rows));
    });

    //삭제 버튼 누른 경우
    $("#div_favorite").on("click", "button", async function(){
        const id=$(this).attr("id");
        if(!confirm(`${id} 즐겨찾기를 삭제하실래요?`)) return;
        const ref_local=ref(db, `favorite/${sessionStorage.getItem("uid")}/${id}`);
        await remove(ref_local);
        alert("삭제되었습니다!")
    });
</script>