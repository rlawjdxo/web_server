<style>
    #div_books  img{
        cursor: pointer;
    }
    #div_books .bi-cart{
        cursor: pointer;
        color: green;
    }
</style>
<div class="row my-5">
    <div class="col">
        <div class="row md-2 justify-content-end">
            <form name="frm" class="col-6 col-md-4 col-lg-3">
                <div class="input-group">
                    <input name="query" class="form-control" value="자바">
                    <button class="btn btn-primary">검색</button>
                </div>
            </form>
        </div>
        <!-- 검색결과 출력 -->
        <div id="div_books" class="row"></div>
        <!-- 페이지 이동 -->
        <div class="text-center">
            <button id="prev" class="btn btn-primary">이전</button>
            <span id="span_page" class="mx-3">1/10</span>
            <button id="next" class="btn btn-primary">다음</button>
        </div>
    </div>
</div>
<!-- 도서 정보 출력 탬블릿 -->
<!-- index 0,1,2,3 -->
<!-- this는 book에 함수로 바꿔줌 -->
<script type="x-handlebars-template" id="temp_books">
    {{#each documents}}
    <div class="col-6 col-md-4 col-lg-2 mb-2">
        <div class="card">
            <div class="card-body">
                <img src="{{chkImage thumbnail}}" width="90%" index="{{@index}}">
                <div class=".ellipsis  text-center">{{title}}</div>
            </div>
            <div class="card-footer">
                {{fmtprice price}}
                <i class="bi bi-cart float-end" book="{{book @this}}"></i>
            </div>
        </div>
    </div>
    <%-include('books/modal.ejs')%>
    {{/each}}
</script>

<!-- Handlebars 함수 -->
<script>
    Handlebars.registerHelper("chkImage", function(image){
        if(image) {
            return image;
        }else {
          return "https://via.placeholder.com/120x170"
        }
    });

    Handlebars.registerHelper("fmtprice", function(price){
        if(price) return price.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ',') + '원';
    });

    // book을 string 타입으로 바꿔주기
    Handlebars.registerHelper("book", function(book){
        return JSON.stringify(book);
    });
    //json오브젝트를 함수로 바꿔주는것
</script>
<script type="module"> // 데이터베이스를 가져오는것! import를 위해 type="module"
    import { app } from "/javascripts/firebaseInit.js";
    import { getDatabase, ref, set, get } from "https://www.gstatic.com/firebasejs/10.4.0/firebase-database.js"; //ref는 어디에다 쓸것인지 set, get으로 지정
    const db = getDatabase(app);    //설정파일 app 지정


    let query=$(frm.query).val();
    let page=1;

    //장바구니 아이콘을 클릭했을 때
    $("#div_books").on("click", ".bi-cart", async function(){
        // 로그인 체크 먼저 확인해 주기!!! 
        if(!sessionStorage.getItem("email")){
            alert("로그인 되어있지 않아요!");
            location.href="/users/login";
        }else{
            //장바구니에 상품정보 저장
            const book=JSON.parse($(this).attr("book")); //책에 대한 정보 담아줌 현재 string타입이여서 object로 바꿔줌  parsㄷ 중요!!!!!!!!!!>> firebase에 넣어줌 사이트들어가서 rules를 true로 바꿔주기!
            console.log(book);
            const ref_book = `cart/${sessionStorage.getItem("uid")}/${book.isbn}`; // id--isbn중복 방지
            //장바구니에 상품이 중복되어 있는지 확인 snapshot
            const snapshot = await get(ref(db, ref_book));  //레퍼런스 지정 get으로 꺼내오기!
            if(snapshot.val()){
                alert("이미 등록");
            }
            else{ if(!confirm("장바구니에 저장하실래요?")) return;  // 한번더 확인창 
            set(ref(db, ref_book), book);
            alert("장바구니에 추가 되었습니다!");
            }
        }
    });

    //이미지를 클릭 했을때
    $("#div_books").on("click", "img", function(){
        let index=$(this).attr("index");
        // alert(index);
        $("#modal" + index).modal("show");
    });

    $(frm).on("submit", function(e){
        e.preventDefault(); //막다
        query=$(frm.query).val();
        page=1;
        getBooks();
    });

    //다음 버튼 이동
    $("#next").on("click", function(){
        page++;
        getBooks();
    });

        //이전 버튼 이동
        $("#prev").on("click", function(){
        page--;
        getBooks();
    });


    getBooks();
    function getBooks(){
        $.ajax({
            type : 'get',
            url : "https://dapi.kakao.com/v3/search/book?target=title",
            headers: {"Authorization" : "KakaoAK d0b5f4b135aba43b9e204b8f8ef7dcf7"},
            data :{query : query, page : page, size : 6},
            success:function(data){
                console.log(data);
                let temp=Handlebars.compile($("#temp_books").html());
                $("#div_books").html(temp(data));

                let last = Math.ceil(data.meta.pageable_count/5)
                $("#span_page").html(page + "/" + last);

                if(page==1)$("#prev").attr("disabled", true);
                else $("#prev").attr("disabled", false);

                if(data.meta.is_end) $("#next").attr("disabled", true);
                else $("#next").attr("disabled", false);
            }
        });
    }
</script>